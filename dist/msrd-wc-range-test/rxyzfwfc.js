/*! Built with http://stenciljs.com */
const{h,Context}=window.MsrdWcRangeTest;class RangeTest{constructor(){this.state={value:1,min:0,max:5}}watchValue(e){this.changeValue(e)}watchMin(e){this.changeMin(e)}watchMax(e){this.changeMax(e)}componentWillLoad(){console.log("[wc:range]","The component is about to be rendered"),this.willLoad.emit("willLoad")}componentDidLoad(){console.log("[wc:range]","The component has been rendered"),this.didLoad.emit("didLoad")}componentWillUpdate(){console.log("[wc:range]","The component will update"),this.willUpdate.emit("willUpdate")}componentDidUpdate(){console.log("[wc:range]","The component did update"),this.didUpdate.emit("didUpdate")}componentDidUnload(){console.log("[wc:range]","The view has been removed from the DOM"),this.didUnload.emit("didUnload")}changeValue(e,t=!1){(e=Math.min(this.state.max,Math.max(this.state.min,Math.round(e))))!==this.state.value&&this.changeState(Object.assign({},this.state,{value:e}),t)}changeMin(e){(e=Math.round(e))!==this.state.min&&this.changeState({value:Math.max(this.state.value,e),min:e,max:Math.max(this.state.max,e)})}changeMax(e){(e=Math.round(e))!==this.state.max&&this.changeState({value:Math.min(this.state.value,e),min:Math.min(this.state.min,e),max:e})}changeState(e,t=!1){console.info("[wc:range]","state change",this.state,e),this.state=e,t&&(console.info("[wc:range]","emit change",e.value),this.change.emit(e.value))}increment(){this.changeValue(this.state.value+1,!0)}decrement(){this.changeValue(this.state.value-1,!0)}render(){return h("div",null,h("button",{onClick:()=>this.decrement(),disabled:this.state.value<=this.state.min},"Less"),h("span",{class:"value"},this.state.value),h("button",{onClick:()=>this.increment(),disabled:this.state.value>=this.state.max},"More"))}static get is(){return"msrd-range-test"}static get encapsulation(){return"shadow"}static get properties(){return{host:{elementRef:!0},max:{type:Number,attr:"max",watchCallbacks:["watchMax"]},min:{type:Number,attr:"min",watchCallbacks:["watchMin"]},state:{state:!0},value:{type:Number,attr:"value",watchCallbacks:["watchValue"]}}}static get events(){return[{name:"change",method:"change",bubbles:!0,cancelable:!0,composed:!0},{name:"willLoad",method:"willLoad",bubbles:!0,cancelable:!0,composed:!0},{name:"didLoad",method:"didLoad",bubbles:!0,cancelable:!0,composed:!0},{name:"willUpdate",method:"willUpdate",bubbles:!0,cancelable:!0,composed:!0},{name:"didUpdate",method:"didUpdate",bubbles:!0,cancelable:!0,composed:!0},{name:"didUnload",method:"didUnload",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return"*{font-family:sans-serif}:host{padding:1rem}span.value{font-size:2rem;padding:0 1rem}"}}export{RangeTest as MsrdRangeTest};